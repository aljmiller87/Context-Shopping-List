// Animation
@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}

@mixin animation-delay($str) {
  -webkit-animation-delay: #{$str};
  animation-delay: #{$str};
}
@mixin animation-duration($str) {
  -webkit-animation-duration: #{$str};
  animation-duration: #{$str};
}

@mixin animation-timing-function($str) {
  -webkit-animation-timing-function: #{$str};
  animation-timing-function: #{$str};
}

// Breakpoint: media queries
@mixin breakpoint($point){
    @if ($point == xl){
        @media (min-width: 1600px){ @content }
    }
    @if ($point == lg){
        @media (min-width: 1200px){ @content }
    }
    @else if ($point == md){
        @media (min-width: 992px) and (max-width: 1199px){ @content }
    }
    @else if ($point == md-min){
        @media (min-width: 992px) { @content }
    }
    @else if ($point == sm){
        @media (min-width: 768px) and (max-width: 991px){ @content }
    }
    @else if ($point == sm-max){
        @media (max-width: 991px) { @content }
    }
    @else if ($point == sm-min){
        @media (min-width: 768px) { @content }
    }
    @else if ($point == xs){
        @media (max-width: 767px)  { @content }
    }
    @else if ($point == xxs){
        @media (max-width: 640px) and (min-width: 481px){ @content }
    }
    @else if ($point == xxxs){
        @media  (max-width: 480px){ @content }
    }
}


// Keyframes for CSS animations
@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }
    @keyframes #{$animation-name} {
        @content;
    }
}

// Linear Gradient
@mixin linear-gradient($gradient) {
    @if $color-from and $color-to {
        $ie-from: ie-hex-str($color-from);
        $ie-to: ie-hex-str($color-to);
        $webkit: 'left top, left bottom';
        $spec: 'top';
        $ie: 0;

    @if $type == vertical {
        $webkit: 'left top, left bottom';
        $spec: 'top';
        $ie: 0;
    }
    @if $type == horizontal {
        $webkit: 'left top, right top';
        $spec: 'to right';
        $ie: 1;
    }
    @if $type == left-right {
        $webkit: 'left top, right bottom';
        $spec: '135deg';
        $ie: 1;
    }
    @if $type == right-left {
        $webkit: 'left bottom, right top';
        $spec: '45deg';
        $ie: 1;
    }
    background-image: -webkit-gradient($type, #{$webkit}, from($color-from), to($color-to));
    background-image: -webkit-linear-gradient(#{$spec}, $color-from, $color-to);
    background-image: linear-gradient(#{$spec}, $color-from, $color-to);
    -ms-filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$ie-from}', endColorstr='#{$ie-to}', GradientType=#{$ie});
    }
}

// Rotate
@mixin rotate($deg) {
  @include transform(rotate(#{$deg}deg));
}

// Scale
@mixin scale($scale) {
     @include transform(scale($scale));
}

// Skew
@mixin skew ($x, $y) {
   @include transform(skew(#{$x}deg, #{$y}deg));
}

// Transform
@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}

// Translate
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}

// Transform Origin
@mixin transform-origin($origin) {
    moz-transform-origin: $origin;
    -o-transform-origin: $origin;
    -ms-transform-origin: $origin;
    -webkit-transform-origin: $origin;
    transform-origin: $origin;
}

// Transition
@mixin transition($transition...) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}
@mixin transition-property($property...) {
    -moz-transition-property:    $property;
    -o-transition-property:      $property;
    -webkit-transition-property: $property;
    transition-property:         $property;
}
@mixin transition-duration($duration...) {
    -moz-transition-property:    $duration;
    -o-transition-property:      $duration;
    -webkit-transition-property: $duration;
    transition-property:         $duration;
}
@mixin transition-timing-function($timing...) {
    -moz-transition-timing-function:    $timing;
    -o-transition-timing-function:      $timing;
    -webkit-transition-timing-function: $timing;
    transition-timing-function:         $timing;
}
@mixin transition-delay($delay...) {
    -moz-transition-delay:    $delay;
    -o-transition-delay:      $delay;
    -webkit-transition-delay: $delay;
    transition-delay:         $delay;
}

// List absolute positioning
@mixin clear-absolute-position {
    position: relative;
    top: inherit;
    right: inherit;
    bottom: inherit;
    left: inherit;
}

// Clear defaults that usually show up on <button>
@mixin clear-button-defaults {
    background: none;
    border: none;
    appearance: none;
    -moz-appearance: none;
    -webkit-appearance: none;
}

// Clear defaults that usually show up on <ul>
@mixin clear-list-defaults {
    margin: 0;
    padding: 0;
    list-style: none;
    li {
        margin: 0;
        padding: 0;
        list-style: none;
        &:before {
            position: inherit;
            top: inherit;
            right: inherit;
            bottom: inherit;
            left: inherit;
            background: none;
            content: none;
        }
    }
}

